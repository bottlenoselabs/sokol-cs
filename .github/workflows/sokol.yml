name: "Build test pack deploy"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_SDK_VERSION: 5.0.301

on:
  push:
    branches: [develop]
    paths-ignore: ['**/*.md']
  pull_request_target:
    branches: [develop]

jobs:

  bindgen-job:
    name: "Bindgen"
    runs-on: ubuntu-latest
    steps:

    - name: "Clone Git repository"
      uses: actions/checkout@master
      with:
        submodules: true

    - name: "Bindgen"
      shell: bash
      run: ./bindgen.sh

    - name: "Add + commit + push (if necessary)"
      uses: EndBug/add-and-commit@v7
      with:
        default_author: user_info

  build-native-job:
    name: "${{ matrix.platform.rid }}"
    needs: [bindgen-job]
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
        - { name: Windows (x64), os: ubuntu-latest, rid: win-x64 }
        - { name: Linux (x64), os: ubuntu-latest, rid: linux-x64 }
        - { name: macOS (x64), os: macos-latest, rid: osx-x64 }
    steps:
      
    - name: "Clone"
      uses: actions/checkout@master
      with:
        submodules: true

    - name: "Linux dependencies"
      if: ${{ startsWith(matrix.platform.rid, 'linux') }}
      run: |
        sudo apt-get update
        sudo apt-get install \
          libasound2-dev \
          libegl1-mesa-dev \
          libxcursor-dev \
          libxi-dev

    - name: "Build native libraries (Unix)"
      if: ${{ !(startsWith(matrix.platform.rid, 'win')) }}
      shell: bash
      run: ./library.sh

    - name: "Build native libraries (Windows)"
      if: ${{ startsWith(matrix.platform.rid, 'win') }}
      shell: bash
      run: sudo apt-get update -y && sudo apt-get install -y mingw-w64 && ./library.sh microsoft