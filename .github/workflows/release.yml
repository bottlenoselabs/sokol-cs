name: "Release"
on:
  workflow_dispatch:
    inputs:
      pre-release:
        description: 'Is this a release candidate (pre-release)? (NOTE: candidates get uploaded to MyGet.org instead of NuGet.org)'     
        required: true
        default: 'true'
  schedule:
    - cron: "0 0 1 * *" # First day of every month

jobs:

  build-job:
    name: "Build"
    uses: "./.github/workflows/build.yml"

  release-job:
    name: "Release"
    needs: [build-job]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: "Clone Git repository"
        uses: actions/checkout@master
        with:
          submodules: "recursive"

      - name: "Set version"
        id: set-version
        shell: bash
        run: |
          IS_PRERELEASE="${{ github.event.inputs.pre-release }}"
          if [[ "$IS_PRERELEASE" = "true" ]]; then
            echo "VERSION=$(date +'%Y.%m.%d')-rc" >> "$GITHUB_OUTPUT" 
          else
            echo "VERSION=$(date +'%Y.%m.%d')" >> "$GITHUB_OUTPUT" 
          fi

      - name: "Download native libraries (win-x64)"
        uses: actions/download-artifact@v1
        with:
          name: "native-libraries-win-x64"
          path: "./lib"

      - name: "Download native libraries (osx)"
        uses: actions/download-artifact@v1
        with:
          name: "native-libraries-osx"
          path: "./lib"

      - name: "Download native libraries (linux-x64)"
        uses: actions/download-artifact@v1
        with:
          name: "native-libraries-linux-x64"
          path: "./lib"

      - name: ".NET pack"
        run: dotnet pack "./src/cs" --nologo --verbosity minimal --configuration Release -p:PackageVersion="${{ steps.set-version.outputs.VERSION }}" -p:RepositoryBranch="${{ github.head_ref || github.ref_name }}" -p:RepositoryCommit="${{ github.sha }}"

      - name: "Upload packages to MyGet"
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.pre-release == 'true'
        env:
          MYGET_ACCESS_TOKEN: ${{ secrets.MYGET_ACCESS_TOKEN }}
        run: dotnet nuget push "./nupkg/**/*.nupkg" --source https://www.myget.org/F/bottlenoselabs/api/v3/index.json --skip-duplicate --api-key $MYGET_ACCESS_TOKEN

      - name: "Upload packages to NuGet"
        if: github.event_name == 'schedule' || github.event.inputs.pre-release == 'false'
        env:
          NUGET_ACCESS_TOKEN: ${{ secrets.NUGET_ACCESS_TOKEN }}
        run: dotnet nuget push "./nupkg/**/*.nupkg" --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key $NUGET_ACCESS_TOKEN

      - uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          makeLatest: true
          prerelease: "{{ github.event.inputs.pre-release == 'true' }}"
          tag: "v${{ steps.set-version.outputs.VERSION }}"
